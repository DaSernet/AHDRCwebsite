@model PaginatedList<AHDRCwebsite.Models.Artwork>

@{
    ViewData["Title"] = "Index";
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<link rel="stylesheet" href="~/css/cardoverlay.css">

<style>
  .image-list{
      display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
      display: flex;
      flex-direction: row;
      width: 90vw;
      position: relative;
      left: calc(-40vw + 48.5%);
}

.img-with-text {
    text-align: center;
    width: 160px;
    margin-right: 8px;
}

.img-with-text img {
    display: block;
    margin: 0 auto;
    max-width: 160px;
}
</style>

@if (User.IsInRole("Administrator"))
{
<p>
    <a asp-action="Create">Create New</a>
</p>
}

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p  class="text-light">
            Find by identifier: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <button id="update-profile-button" type="submit" class="btn btn-primary">Search</button>
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
    <div id="checkbox-container">
        @if (User.IsInRole("Administrator") || User.IsInRole("Subscriber"))
        {
            <label>
                <input type="checkbox" name="selectedCategory" value="au" id="au-checkbox" />
                <span class="text-light">au</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="bk" id="bk-checkbox" />
                <span class="text-light">bk</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="co" id="co-checkbox" />
                <span class="text-light">co</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="ao" id="pc-checkbox" />
                <span class="text-light">pc</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="ph" id="ph-checkbox" />
                <span class="text-light">ph</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="wh" id="wh-checkbox" />
                <span class="text-light">wh</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="xp" id="xp-checkbox" />
                <span class="text-light">xp</span>
            </label>
        }
        else
        {
            <label>
                <input type="checkbox" name="selectedCategory" value="au" id="au-checkbox" />
                <span class="text-light">au</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="bk" id="bk-checkbox" />
                <span class="text-light">bk</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="co" id="co-checkbox" disabled />
                <span class="text-light">co</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="ao" id="pc-checkbox" disabled />
                <span class="text-light">pc</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="ph" id="ph-checkbox" disabled />
                <span class="text-light">ph</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="wh" id="wh-checkbox" />
                <span class="text-light">wh</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="xp" id="xp-checkbox" />
                <span class="text-light">xp</span>
            </label>
        }
    </div>

</form>

@if (Model.Count > 0)
{
    @if (User.IsInRole("Administrator"))
    {

        <table class="table">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["IdentifierSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-currentSelectedCategory="@ViewData["CurrentSelectedCategory"]">Identifier</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["SizeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-currentSelectedCategory="@ViewData["CurrentSelectedCategory"]">Size</a>
                    </th>
                    <th>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Identifier)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Height)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                        <td><a asp-action="Details" asp-route-id="@item.Id"><img src=@("/uploads/" + @item.ArtworkImage.Where(i => i.Artwork == item).Select(i => i.ImageURL).FirstOrDefault()) class="rounded-circle" height="40" width="40"></a></td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="image-list">
        @foreach (var item in Model)
        {
            <div class="img-with-text">
            <a asp-action="Details" asp-route-id="@item.Id"><img src=@("/uploads/" + @item.ArtworkImage.Where(i => i.Artwork == item).Select(i => i.ImageURL).FirstOrDefault()) class="rounded-square" height="160"></a>
            <figcaption class="text-light">@Html.DisplayFor(modelItem => item.Identifier)</figcaption>
            </div>
        }
        </div>
    }

    <a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @nextDisabled">
        Next
    </a>
}



@section Scripts
    {
    <script>
        var checkboxValues = JSON.parse(sessionStorage.getItem('checkboxValues')) || {},
            $checkboxes = $("#checkbox-container :checkbox");

        $checkboxes.on("change", function() {
            $checkboxes.each(function() {
                checkboxValues[this.id] = this.checked;
            });

            sessionStorage.setItem("checkboxValues", JSON.stringify(checkboxValues));
        });

        // On page load
        $.each(checkboxValues, function(key, value) {
            $("#" + key).prop('checked', value);
        });
    </script>
}