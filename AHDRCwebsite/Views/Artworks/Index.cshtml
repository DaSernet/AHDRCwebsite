@model PaginatedList<AHDRCwebsite.Models.Artwork>

@{
    ViewData["Title"] = "Index";
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by identifier: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <button id="update-profile-button" type="submit" class="btn btn-primary">Search</button>
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
    <div id="checkbox-container">
        @if (User.IsInRole("Administrator") || User.IsInRole("Subscriber"))
        {
            <label>
                <input type="checkbox" name="selectedCategory" value="au" id="au-checkbox" />
                <span>au</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="bk" id="bk-checkbox" />
                <span>bk</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="co" id="co-checkbox" />
                <span>co</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="pc" id="pc-checkbox" />
                <span>pc</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="ph" id="ph-checkbox" />
                <span>ph</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="wh" id="wh-checkbox" />
                <span>wh</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="xp" id="xp-checkbox" />
                <span>xp</span>
            </label>
        }
        else
        {
            <label>
                <input type="checkbox" name="selectedCategory" value="au" id="au-checkbox" />
                <span>au</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="bk" id="bk-checkbox" />
                <span>bk</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="co" id="co-checkbox" disabled />
                <span>co</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="pc" id="pc-checkbox" disabled />
                <span>pc</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="ph" id="ph-checkbox" disabled />
                <span>ph</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="wh" id="wh-checkbox" />
                <span>wh</span>
            </label>
            <label>
                <input type="checkbox" name="selectedCategory" value="xp" id="xp-checkbox" />
                <span>xp</span>
            </label>
        }
    </div>
    
</form>
@if (Model.Count > 0)
{
    <table class="table">
            <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["IdentifierSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-currentSelectedCategory="@ViewData["CurrentSelectedCategory"]">Identifier</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["SizeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-currentSelectedCategory="@ViewData["CurrentSelectedCategory"]">Size</a>
                </th>
                <th>
                </th>
            </tr>
    </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Identifier)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Height)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                    <td><a asp-action="Details" asp-route-id="@item.Id"><img src=@("/uploads/" + @item.ArtworkImage.Where(i => i.Artwork == item).Select(i => i.ImageURL).FirstOrDefault()) class="rounded-circle" height="40" width="40"></a></td>
                </tr>
            }
        </tbody>
    </table>
    <a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @nextDisabled">
        Next
    </a>
}


@section Scripts
    {
    <script>
        var checkboxValues = JSON.parse(sessionStorage.getItem('checkboxValues')) || {},
            $checkboxes = $("#checkbox-container :checkbox");

        $checkboxes.on("change", function() {
            $checkboxes.each(function() {
                checkboxValues[this.id] = this.checked;
            });

            sessionStorage.setItem("checkboxValues", JSON.stringify(checkboxValues));
        });

        // On page load
        $.each(checkboxValues, function(key, value) {
            $("#" + key).prop('checked', value);
        });
    </script>
}